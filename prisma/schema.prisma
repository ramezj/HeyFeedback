// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  createdAt DateTime @default(now())
  image         String?
  isSubscribed Boolean @default(false)
  subscription_id String @default("")
  subscription_update_url String @default("")
  subscription_cancel_url String @default("")
  websiteUrl String @default("")
  subscription_plan_id Int @default(0)
  accounts      Account[]
  sessions      Session[]
  feedbacks     Feedback[]
  @@map("users")
}
model Feedback {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  body String
  rating Int
  createdAt DateTime @default(now())
  email String @default("")
  ipAddress String @default("0.0.0.0")
  geo String @default("")
  userAgent String @default("")
  userId String
  user User @relation(fields: [userId], references: [id])
}

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
//   @@map("verificationtokens")
// }
